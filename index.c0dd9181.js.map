{"mappings":"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","sources":["../ogl/src/math/functions/Vec3Func.js","../ogl/src/math/Vec3.js","../ogl/src/math/functions/Vec4Func.js","../ogl/src/math/functions/QuatFunc.js","../ogl/src/math/Quat.js","../ogl/src/math/functions/Mat4Func.js","../ogl/src/math/Mat4.js","../ogl/src/math/Euler.js","../ogl/src/math/functions/EulerFunc.js","../ogl/src/core/Transform.js","../ogl/src/core/Camera.js","../ogl/src/core/Geometry.js","../ogl/src/core/Texture.js","../ogl/src/math/functions/Mat3Func.js","../ogl/src/math/Mat3.js","../ogl/src/core/Mesh.js","../ogl/src/extras/GLTFAnimation.js","../ogl/src/extras/GLTFSkin.js","../ogl/src/core/Program.js","../ogl/src/extras/NormalProgram.js","../ogl/src/math/Vec4.js","../ogl/src/extras/InstancedMesh.js","../ogl/src/extras/GLTFLoader.js","../ogl/src/math/functions/Vec2Func.js","../ogl/src/math/Vec2.js","../ogl/src/extras/Orbit.js","../ogl/src/extras/Raycast.js","../ogl/src/core/Renderer.js","../ogl/src/extras/Plane.js","../ogl/src/extras/Box.js","skybox.js","abstract.js","ui.js","editmode.js","index.js"],"sourcesContent":["const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        this.onChange();\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this.onChange();\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    add(ma, mb) {\n        if (mb) Mat4Func.add(this, ma, mb);\n        else Mat4Func.add(this, this, ma);\n        return this;\n    }\n\n    sub(ma, mb) {\n        if (mb) Mat4Func.subtract(this, ma, mb);\n        else Mat4Func.subtract(this, this, ma);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (!ma.length) {\n            Mat4Func.multiplyScalar(this, this, ma);\n        } else if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        this.onChange();\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = new Mat4();\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left,\n        right = this.right,\n        bottom = this.bottom,\n        top = this.top,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node, worldMatrix = node.worldMatrix) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(worldMatrix);\n\n        const radius = node.geometry.bounds.radius * worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * 4;\n            const offset = numLoc === 1 ? 0 : numLoc * 4;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        // For drawElements, offset needs to be multiple of type size\n        let indexBytesPerElement = 2;\n        if (this.attributes.index?.type === this.gl.UNSIGNED_INT) indexBytesPerElement = 4;\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement\n                );\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst tmpVec3A = new Vec3();\nconst tmpVec3B = new Vec3();\nconst tmpVec3C = new Vec3();\nconst tmpVec3D = new Vec3();\n\nconst tmpQuatA = new Quat();\nconst tmpQuatB = new Quat();\nconst tmpQuatC = new Quat();\nconst tmpQuatD = new Quat();\n\nexport class GLTFAnimation {\n    constructor(data, weight = 1) {\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = weight;\n\n        // Set to false to not apply modulo to elapsed against duration\n        this.loop = true;\n\n        // Find starting time as exports from blender (perhaps others too) don't always start from 0\n        this.startTime = data.reduce((a, { times }) => Math.min(a, times[0]), Infinity);\n        // Get largest final time in all channels to calculate duration\n        this.endTime = data.reduce((a, { times }) => Math.max(a, times[times.length - 1]), 0);\n        this.duration = this.endTime - this.startTime;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = !this.duration\n            ? 0\n            : (this.loop ? this.elapsed % this.duration : Math.min(this.elapsed, this.duration - 0.001)) + this.startTime;\n\n        this.data.forEach(({ node, transform, interpolation, times, values }) => {\n            if (!this.duration) {\n                let val = tmpVec3A;\n                let size = 3;\n                if (transform === 'quaternion') {\n                    val = tmpQuatA;\n                    size = 4;\n                }\n                val.fromArray(values, 0);\n                if (size === 4) node[transform].slerp(val, weight);\n                else node[transform].lerp(val, weight);\n                return;\n            }\n\n            // Get index of two time values elapsed is between\n            const prevIndex =\n                Math.max(\n                    1,\n                    times.findIndex((t) => t > elapsed)\n                ) - 1;\n            const nextIndex = prevIndex + 1;\n\n            // Get linear blend/alpha between the two\n            let alpha = (elapsed - times[prevIndex]) / (times[nextIndex] - times[prevIndex]);\n            if (interpolation === 'STEP') alpha = 0;\n\n            let prevVal = tmpVec3A;\n            let prevTan = tmpVec3B;\n            let nextTan = tmpVec3C;\n            let nextVal = tmpVec3D;\n            let size = 3;\n\n            if (transform === 'quaternion') {\n                prevVal = tmpQuatA;\n                prevTan = tmpQuatB;\n                nextTan = tmpQuatC;\n                nextVal = tmpQuatD;\n                size = 4;\n            }\n\n            if (interpolation === 'CUBICSPLINE') {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size * 3 + size * 1);\n                prevTan.fromArray(values, prevIndex * size * 3 + size * 2);\n                nextTan.fromArray(values, nextIndex * size * 3 + size * 0);\n                nextVal.fromArray(values, nextIndex * size * 3 + size * 1);\n\n                // interpolate for final value\n                prevVal = this.cubicSplineInterpolate(alpha, prevVal, prevTan, nextTan, nextVal);\n                if (size === 4) prevVal.normalize();\n            } else {\n                // Get the prev and next values from the indices\n                prevVal.fromArray(values, prevIndex * size);\n                nextVal.fromArray(values, nextIndex * size);\n\n                // interpolate for final value\n                if (size === 4) prevVal.slerp(nextVal, alpha);\n                else prevVal.lerp(nextVal, alpha);\n            }\n\n            // interpolate between multiple possible animations\n            if (size === 4) node[transform].slerp(prevVal, weight);\n            else node[transform].lerp(prevVal, weight);\n        });\n    }\n\n    cubicSplineInterpolate(t, prevVal, prevTan, nextTan, nextVal) {\n        const t2 = t * t;\n        const t3 = t2 * t;\n\n        const s2 = 3 * t2 - 2 * t3;\n        const s3 = t3 - t2;\n        const s0 = 1 - s2;\n        const s1 = s3 - t2 + t;\n\n        for (let i = 0; i < prevVal.length; i++) {\n            prevVal[i] = s0 * prevVal[i] + s1 * (1 - t) * prevTan[i] + s2 * nextVal[i] + s3 * t * nextTan[i];\n        }\n\n        return prevVal;\n    }\n}\n","import { Mesh } from '../core/Mesh.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Texture } from '../core/Texture.js';\n\nconst tempMat4 = new Mat4();\nconst identity = new Mat4();\n\nexport class GLTFSkin extends Mesh {\n    constructor(gl, { skeleton, geometry, program, mode = gl.TRIANGLES } = {}) {\n        super(gl, { geometry, program, mode });\n        this.skeleton = skeleton;\n        this.program = program;\n        this.createBoneTexture();\n        // this.animations = [];\n    }\n\n    createBoneTexture() {\n        if (!this.skeleton.joints.length) return;\n        const size = Math.max(4, Math.pow(2, Math.ceil(Math.log(Math.sqrt(this.skeleton.joints.length * 4)) / Math.LN2)));\n        this.boneMatrices = new Float32Array(size * size * 4);\n        this.boneTextureSize = size;\n        this.boneTexture = new Texture(this.gl, {\n            image: this.boneMatrices,\n            generateMipmaps: false,\n            type: this.gl.FLOAT,\n            internalFormat: this.gl.renderer.isWebgl2 ? this.gl.RGBA32F : this.gl.RGBA,\n            minFilter: this.gl.NEAREST,\n            magFilter: this.gl.NEAREST,\n            flipY: false,\n            width: size,\n        });\n    }\n\n    // addAnimation(data) {\n    //     const animation = new Animation({ objects: this.bones, data });\n    //     this.animations.push(animation);\n    //     return animation;\n    // }\n\n    // updateAnimations() {\n    //     // Calculate combined animation weight\n    //     let total = 0;\n    //     this.animations.forEach((animation) => (total += animation.weight));\n\n    //     this.animations.forEach((animation, i) => {\n    //         // force first animation to set in order to reset frame\n    //         animation.update(total, i === 0);\n    //     });\n    // }\n\n    updateUniforms() {\n        // Update bone texture\n        this.skeleton.joints.forEach((bone, i) => {\n            // Find difference between current and bind pose\n            tempMat4.multiply(bone.worldMatrix, bone.bindInverse);\n            this.boneMatrices.set(tempMat4, i * 16);\n        });\n        if (this.boneTexture) this.boneTexture.needsUpdate = true;\n    }\n\n    draw({ camera } = {}) {\n        if (!this.program.uniforms.boneTexture) {\n            Object.assign(this.program.uniforms, {\n                boneTexture: { value: this.boneTexture },\n                boneTextureSize: { value: this.boneTextureSize },\n            });\n        }\n\n        this.updateUniforms();\n\n        // Switch the world matrix with identity to ignore any transforms\n        // on the mesh itself - only use skeleton's transforms\n        const _worldMatrix = this.worldMatrix;\n        this.worldMatrix = identity;\n\n        super.draw({ camera });\n\n        // Switch back to leave identity untouched\n        this.worldMatrix = _worldMatrix;\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            // Ignore special built-in inputs. eg gl_VertexID, gl_InstanceID\n            if (location === -1) continue;\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Program } from '../core/Program.js';\n\nconst vertex = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    attribute vec3 position;\n    attribute vec3 normal;\n\n    uniform mat3 normalMatrix;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n\n    varying vec3 vNormal;\n\n    void main() {\n        vNormal = normalize(normalMatrix * normal);\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n`;\n\nconst fragment = /* glsl */ `\n    precision highp float;\n    precision highp int;\n\n    varying vec3 vNormal;\n\n    void main() {\n        gl_FragColor.rgb = normalize(vNormal);\n        gl_FragColor.a = 1.0;\n    }\n`;\n\nexport function NormalProgram(gl) {\n    return new Program(gl, {\n        vertex: vertex,\n        fragment: fragment,\n        cullFace: null,\n    });\n}\n","import * as Vec4Func from './functions/Vec4Func.js';\n\nexport class Vec4 extends Array {\n    constructor(x = 0, y = x, z = x, w = x) {\n        super(x, y, z, w);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set w(v) {\n        this[3] = v;\n    }\n\n    set(x, y = x, z = x, w = x) {\n        if (x.length) return this.copy(x);\n        Vec4Func.set(this, x, y, z, w);\n        return this;\n    }\n\n    copy(v) {\n        Vec4Func.copy(this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec4Func.normalize(this, this);\n        return this;\n    }\n\n    multiply(v) {\n        Vec4Func.scale(this, this, v);\n        return this;\n    }\n\n    dot(v) {\n        return Vec4Func.dot(this, v);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import { Transform } from '../core/Transform.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec4 } from '../math/Vec4.js';\n\nexport class InstancedMesh extends Mesh {\n    constructor(...args) {\n        super(...args);\n\n        // Skip renderer frustum culling\n        this.frustumCulled = false;\n        this.isInstancedMesh = true;\n    }\n\n    addFrustumCull() {\n        this.instanceTransforms = null;\n        this.instanceLightmapScaleOffset = null;\n        this.totalInstanceCount = 0;\n        this.frustumCullFunction = null;\n        this.instanceRenderList = null;\n\n        // Get instanced mesh\n        if (!this.geometry.attributes.instanceMatrix)\n            console.error(`mesh ${this.name ? `\"${this.name}\" ` : ``}missing instanceMatrix attribute; unable to frustum cull`);\n\n        // Make list of transforms from instanceMatrix\n        const matrixData = this.geometry.attributes.instanceMatrix.data;\n        this.instanceTransforms = [];\n        for (let i = 0, j = 0; i < matrixData.length; i += 16, j++) {\n            const transform = new Transform();\n            transform.index = j;\n            transform.matrix.fromArray(matrixData, i);\n            transform.decompose();\n            this.instanceTransforms.push(transform);\n            // Add transforms to parent to update world matrices\n            transform.setParent(this.parent);\n        }\n        this.totalInstanceCount = this.instanceTransforms.length;\n\n        // Check for lightmap attributes - attach to transform\n        if (!!this.geometry.attributes.lightmapScaleOffset) {\n            const lightmapData = this.geometry.attributes.lightmapScaleOffset.data;\n            for (let i = 0, j = 0; i < lightmapData.length; i += 4, j++) {\n                this.instanceTransforms[j].lightmapData = new Vec4().fromArray(lightmapData, i);\n            }\n        }\n\n        this.frustumCullFunction = ({ camera }) => {\n            // frustum cull transforms each frame - pass world matrix\n            this.instanceRenderList = [];\n            this.instanceTransforms.forEach((transform) => {\n                if (!camera.frustumIntersectsMesh(this, transform.worldMatrix)) return;\n                this.instanceRenderList.push(transform);\n            });\n\n            // update instanceMatrix and instancedCount with visible\n            this.instanceRenderList.forEach((transform, i) => {\n                transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n                \n                // Update lightmap attr\n                if (transform.lightmapData) {\n                    transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n                    this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n                }\n            });\n            this.geometry.instancedCount = this.instanceRenderList.length;\n            this.geometry.attributes.instanceMatrix.needsUpdate = true;\n        };\n\n        this.onBeforeRender(this.frustumCullFunction);\n    }\n\n    removeFrustumCull() {\n        this.offBeforeRender(this.frustumCullFunction);\n        this.geometry.instancedCount = this.totalInstanceCount;\n        this.instanceTransforms.forEach((transform, i) => {\n            transform.matrix.toArray(this.geometry.attributes.instanceMatrix.data, i * 16);\n\n            // Update lightmap attr\n            if (transform.lightmapData) {\n                transform.lightmapData.toArray(this.geometry.attributes.lightmapScaleOffset.data, i * 4);\n                this.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n            }\n        });\n        this.geometry.attributes.instanceMatrix.needsUpdate = true;\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Transform } from '../core/Transform.js';\nimport { Texture } from '../core/Texture.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { GLTFAnimation } from './GLTFAnimation.js';\nimport { GLTFSkin } from './GLTFSkin.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { NormalProgram } from './NormalProgram.js';\nimport { InstancedMesh } from './InstancedMesh.js';\n\n// Supports\n// [x] glb\n// [x] Geometry\n// [x] Nodes and Hierarchy\n// [x] Instancing\n// [x] Skins\n// [x] Textures\n// [x] Animation\n// [x] GLB support\n// [x] Basis/ktx2\n// [x] KHR_lights_punctual lights\n// [ ] Morph Targets\n// [ ] Materials\n// [ ] Cameras\n\n// TODO: Sparse accessor packing? For morph targets basically\n// TODO: init accessor missing bufferView with 0s\n// TODO: morph target animations\n// TODO: option to turn off GPU instancing\n\nconst TYPE_ARRAY = {\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array,\n    'image/jpeg': Uint8Array,\n    'image/png': Uint8Array,\n};\n\nconst TYPE_SIZE = {\n    SCALAR: 1,\n    VEC2: 2,\n    VEC3: 3,\n    VEC4: 4,\n    MAT2: 4,\n    MAT3: 9,\n    MAT4: 16,\n};\n\nconst ATTRIBUTES = {\n    POSITION: 'position',\n    NORMAL: 'normal',\n    TANGENT: 'tangent',\n    TEXCOORD_0: 'uv',\n    TEXCOORD_1: 'uv2',\n    COLOR_0: 'color',\n    WEIGHTS_0: 'skinWeight',\n    JOINTS_0: 'skinIndex',\n};\n\nconst TRANSFORMS = {\n    translation: 'position',\n    rotation: 'quaternion',\n    scale: 'scale',\n};\n\nexport class GLTFLoader {\n    static setBasisManager(manager) {\n        this.basisManager = manager;\n    }\n\n    static async load(gl, src) {\n        const dir = src.split('/').slice(0, -1).join('/') + '/';\n\n        // load main description json\n        const desc = await this.parseDesc(src);\n\n        return await this.parse(gl, desc, dir);\n    }\n\n    static async parse(gl, desc, dir) {\n        if (desc.asset === undefined || desc.asset.version[0] < 2) console.warn('Only GLTF >=2.0 supported. Attempting to parse.');\n\n        if (desc.extensionsRequired?.includes('KHR_texture_basisu') && !this.basisManager)\n            console.warn('KHR_texture_basisu extension required but no manager supplied. Use .setBasisManager()');\n\n        // Load buffers async\n        const buffers = await this.loadBuffers(desc, dir);\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        gl.renderer.bindVertexArray(null);\n\n        // Create gl buffers from bufferViews\n        const bufferViews = this.parseBufferViews(gl, desc, buffers);\n\n        // Create images from either bufferViews or separate image files\n        const images = await this.parseImages(gl, desc, dir, bufferViews);\n\n        const textures = this.parseTextures(gl, desc, images);\n\n        // Just pass through material data for now\n        const materials = this.parseMaterials(gl, desc, textures);\n\n        // Fetch the inverse bind matrices for skeleton joints\n        const skins = this.parseSkins(gl, desc, bufferViews);\n\n        // Create geometries for each mesh primitive\n        const meshes = this.parseMeshes(gl, desc, bufferViews, materials, skins);\n\n        // Create transforms, meshes and hierarchy\n        const nodes = this.parseNodes(gl, desc, meshes, skins, images);\n\n        // Place nodes in skeletons\n        this.populateSkins(skins, nodes);\n\n        // Create animation handlers\n        const animations = this.parseAnimations(gl, desc, nodes, bufferViews);\n\n        // Get top level nodes for each scene\n        const scenes = this.parseScenes(desc, nodes);\n        const scene = scenes[desc.scene];\n\n        // Create uniforms for scene lights (TODO: light linking?)\n        const lights = this.parseLights(gl, desc, nodes, scenes);\n\n        // Remove null nodes (instanced transforms)\n        for (let i = nodes.length; i >= 0; i--) if (!nodes[i]) nodes.splice(i, 1);\n\n        return {\n            json: desc,\n            buffers,\n            bufferViews,\n            images,\n            textures,\n            materials,\n            meshes,\n            nodes,\n            lights,\n            animations,\n            scenes,\n            scene,\n        };\n    }\n\n    static async parseDesc(src) {\n        if (!src.match(/\\.glb/)) {\n            return await fetch(src).then((res) => res.json());\n        } else {\n            return await fetch(src)\n                .then((res) => res.arrayBuffer())\n                .then((glb) => this.unpackGLB(glb));\n        }\n    }\n\n    // From https://github.com/donmccurdy/glTF-Transform/blob/e4108cc/packages/core/src/io/io.ts#L32\n    static unpackGLB(glb) {\n        // Decode and verify GLB header.\n        const header = new Uint32Array(glb, 0, 3);\n        if (header[0] !== 0x46546c67) {\n            throw new Error('Invalid glTF asset.');\n        } else if (header[1] !== 2) {\n            throw new Error(`Unsupported glTF binary version, \"${header[1]}\".`);\n        }\n        // Decode and verify chunk headers.\n        const jsonChunkHeader = new Uint32Array(glb, 12, 2);\n        const jsonByteOffset = 20;\n        const jsonByteLength = jsonChunkHeader[0];\n        if (jsonChunkHeader[1] !== 0x4e4f534a) {\n            throw new Error('Unexpected GLB layout.');\n        }\n\n        // Decode JSON.\n        const jsonText = new TextDecoder().decode(glb.slice(jsonByteOffset, jsonByteOffset + jsonByteLength));\n        const json = JSON.parse(jsonText);\n        // JSON only\n        if (jsonByteOffset + jsonByteLength === glb.byteLength) return json;\n\n        const binaryChunkHeader = new Uint32Array(glb, jsonByteOffset + jsonByteLength, 2);\n        if (binaryChunkHeader[1] !== 0x004e4942) {\n            throw new Error('Unexpected GLB layout.');\n        }\n        // Decode content.\n        const binaryByteOffset = jsonByteOffset + jsonByteLength + 8;\n        const binaryByteLength = binaryChunkHeader[0];\n        const binary = glb.slice(binaryByteOffset, binaryByteOffset + binaryByteLength);\n        // Attach binary to buffer\n        json.buffers[0].binary = binary;\n        return json;\n    }\n\n    // Threejs GLTF Loader https://github.com/mrdoob/three.js/blob/master/examples/js/loaders/GLTFLoader.js#L1085\n    static resolveURI(uri, dir) {\n        // Invalid URI\n        if (typeof uri !== 'string' || uri === '') return '';\n\n        // Host Relative URI\n        if (/^https?:\\/\\//i.test(dir) && /^\\//.test(uri)) {\n            dir = dir.replace(/(^https?:\\/\\/[^\\/]+).*/i, '$1');\n        }\n\n        // Absolute URI http://, https://, //\n        if (/^(https?:)?\\/\\//i.test(uri)) return uri;\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(uri)) return uri;\n\n        // Blob URI\n        if (/^blob:.*$/i.test(uri)) return uri;\n\n        // Relative URI\n        return dir + uri;\n    }\n\n    static async loadBuffers(desc, dir) {\n        if (!desc.buffers) return null;\n        return await Promise.all(\n            desc.buffers.map((buffer) => {\n                // For GLB, binary buffer ready to go\n                if (buffer.binary) return buffer.binary;\n                const uri = this.resolveURI(buffer.uri, dir);\n                return fetch(uri).then((res) => res.arrayBuffer());\n            })\n        );\n    }\n\n    static parseBufferViews(gl, desc, buffers) {\n        if (!desc.bufferViews) return null;\n        // Clone to leave description pure\n        const bufferViews = desc.bufferViews.map((o) => Object.assign({}, o));\n\n        desc.meshes &&\n            desc.meshes.forEach(({ primitives }) => {\n                primitives.forEach(({ attributes, indices }) => {\n                    // Flag bufferView as an attribute, so it knows to create a gl buffer\n                    for (let attr in attributes) bufferViews[desc.accessors[attributes[attr]].bufferView].isAttribute = true;\n\n                    if (indices === undefined) return;\n                    bufferViews[desc.accessors[indices].bufferView].isAttribute = true;\n\n                    // Make sure indices bufferView have a target property for gl buffer binding\n                    bufferViews[desc.accessors[indices].bufferView].target = gl.ELEMENT_ARRAY_BUFFER;\n                });\n            });\n\n        // Get componentType of each bufferView from the accessors\n        desc.accessors.forEach(({ bufferView: i, componentType }) => {\n            bufferViews[i].componentType = componentType;\n        });\n\n        // Get mimetype of bufferView from images\n        desc.images &&\n            desc.images.forEach(({ uri, bufferView: i, mimeType }) => {\n                if (i === undefined) return;\n                bufferViews[i].mimeType = mimeType;\n            });\n\n        // Push each bufferView to the GPU as a separate buffer\n        bufferViews.forEach(\n            (\n                {\n                    buffer: bufferIndex, // required\n                    byteOffset = 0, // optional\n                    byteLength, // required\n                    byteStride, // optional\n                    target = gl.ARRAY_BUFFER, // optional, added above for elements\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n\n                    componentType, // optional, added from accessor above\n                    mimeType, // optional, added from images above\n                    isAttribute,\n                },\n                i\n            ) => {\n                bufferViews[i].data = buffers[bufferIndex].slice(byteOffset, byteOffset + byteLength);\n\n                if (!isAttribute) return;\n                // Create gl buffers for the bufferView, pushing it to the GPU\n                const buffer = gl.createBuffer();\n                gl.bindBuffer(target, buffer);\n                gl.renderer.state.boundBuffer = buffer;\n                gl.bufferData(target, bufferViews[i].data, gl.STATIC_DRAW);\n                bufferViews[i].buffer = buffer;\n            }\n        );\n\n        return bufferViews;\n    }\n\n    static async parseImages(gl, desc, dir, bufferViews) {\n        if (!desc.images) return null;\n        return await Promise.all(\n            desc.images.map(async ({ uri, bufferView: bufferViewIndex, mimeType, name }) => {\n                if (mimeType === 'image/ktx2') {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const image = await this.basisManager.parseTexture(data);\n                    return image;\n                }\n\n                // jpg / png\n                const image = new Image();\n                image.name = name;\n                if (uri) {\n                    image.src = this.resolveURI(uri, dir);\n                } else if (bufferViewIndex !== undefined) {\n                    const { data } = bufferViews[bufferViewIndex];\n                    const blob = new Blob([data], { type: mimeType });\n                    image.src = URL.createObjectURL(blob);\n                }\n                image.ready = new Promise((res) => {\n                    image.onload = () => res();\n                });\n                return image;\n            })\n        );\n    }\n\n    static parseTextures(gl, desc, images) {\n        if (!desc.textures) return null;\n        return desc.textures.map((textureInfo) => this.createTexture(gl, desc, images, textureInfo));\n    }\n\n    static createTexture(gl, desc, images, { sampler: samplerIndex, source: sourceIndex, name, extensions, extras }) {\n        if (sourceIndex === undefined && !!extensions) {\n            // Basis extension source index\n            if (extensions.KHR_texture_basisu) sourceIndex = extensions.KHR_texture_basisu.source;\n        }\n\n        const image = images[sourceIndex];\n        if (image.texture) return image.texture;\n\n        const options = {\n            flipY: false,\n            wrapS: gl.REPEAT, // Repeat by default, opposed to OGL's clamp by default\n            wrapT: gl.REPEAT,\n        };\n        const sampler = samplerIndex !== undefined ? desc.samplers[samplerIndex] : null;\n        if (sampler) {\n            ['magFilter', 'minFilter', 'wrapS', 'wrapT'].forEach((prop) => {\n                if (sampler[prop]) options[prop] = sampler[prop];\n            });\n        }\n\n        // For compressed textures\n        if (image.isBasis) {\n            options.image = image;\n            options.internalFormat = image.internalFormat;\n            if (image.isCompressedTexture) {\n                options.generateMipmaps = false;\n                if (image.length > 1) this.minFilter = gl.NEAREST_MIPMAP_LINEAR;\n            }\n            const texture = new Texture(gl, options);\n            texture.name = name;\n            image.texture = texture;\n            return texture;\n        }\n\n        const texture = new Texture(gl, options);\n        texture.name = name;\n        image.texture = texture;\n        image.ready.then(() => {\n            texture.image = image;\n        });\n\n        return texture;\n    }\n\n    static parseMaterials(gl, desc, textures) {\n        if (!desc.materials) return null;\n        return desc.materials.map(\n            ({\n                name,\n                extensions,\n                extras,\n                pbrMetallicRoughness = {},\n                normalTexture,\n                occlusionTexture,\n                emissiveTexture,\n                emissiveFactor = [0, 0, 0],\n                alphaMode = 'OPAQUE',\n                alphaCutoff = 0.5,\n                doubleSided = false,\n            }) => {\n                const {\n                    baseColorFactor = [1, 1, 1, 1],\n                    baseColorTexture,\n                    metallicFactor = 1,\n                    roughnessFactor = 1,\n                    metallicRoughnessTexture,\n                    //   extensions,\n                    //   extras,\n                } = pbrMetallicRoughness;\n\n                if (baseColorTexture) {\n                    baseColorTexture.texture = textures[baseColorTexture.index];\n                    // texCoord\n                }\n                if (normalTexture) {\n                    normalTexture.texture = textures[normalTexture.index];\n                    // scale: 1\n                    // texCoord\n                }\n                if (metallicRoughnessTexture) {\n                    metallicRoughnessTexture.texture = textures[metallicRoughnessTexture.index];\n                    // texCoord\n                }\n                if (occlusionTexture) {\n                    occlusionTexture.texture = textures[occlusionTexture.index];\n                    // strength 1\n                    // texCoord\n                }\n                if (emissiveTexture) {\n                    emissiveTexture.texture = textures[emissiveTexture.index];\n                    // texCoord\n                }\n\n                return {\n                    name,\n                    extensions,\n                    extras,\n                    baseColorFactor,\n                    baseColorTexture,\n                    metallicFactor,\n                    roughnessFactor,\n                    metallicRoughnessTexture,\n                    normalTexture,\n                    occlusionTexture,\n                    emissiveTexture,\n                    emissiveFactor,\n                    alphaMode,\n                    alphaCutoff,\n                    doubleSided,\n                };\n            }\n        );\n    }\n\n    static parseSkins(gl, desc, bufferViews) {\n        if (!desc.skins) return null;\n        return desc.skins.map(\n            ({\n                inverseBindMatrices, // optional\n                skeleton, // optional\n                joints, // required\n                // name,\n                // extensions,\n                // extras,\n            }) => {\n                return {\n                    inverseBindMatrices: this.parseAccessor(inverseBindMatrices, desc, bufferViews),\n                    skeleton,\n                    joints,\n                };\n            }\n        );\n    }\n\n    static parseMeshes(gl, desc, bufferViews, materials, skins) {\n        if (!desc.meshes) return null;\n        return desc.meshes.map(\n            (\n                {\n                    primitives, // required\n                    weights, // optional\n                    name, // optional\n                    extensions, // optional\n                    extras, // optional\n                },\n                meshIndex\n            ) => {\n                // TODO: weights stuff ?\n                // Parse through nodes to see how many instances there are\n                // and if there is a skin attached\n                // If multiple instances of a skin, need to create each\n                let numInstances = 0;\n                let skinIndices = [];\n                let isLightmap = false;\n                desc.nodes &&\n                    desc.nodes.forEach(({ mesh, skin, extras }) => {\n                        if (mesh === meshIndex) {\n                            numInstances++;\n                            if (skin !== undefined) skinIndices.push(skin);\n                            if (extras && extras.lightmap_scale_offset) isLightmap = true;\n                        }\n                    });\n                let isSkin = !!skinIndices.length;\n\n                // For skins, return array of skin meshes to account for multiple instances\n                if (isSkin) {\n                    primitives = skinIndices.map((skinIndex) => {\n                        return this.parsePrimitives(gl, primitives, desc, bufferViews, materials, 1, isLightmap).map(\n                            ({ geometry, program, mode }) => {\n                                const mesh = new GLTFSkin(gl, { skeleton: skins[skinIndex], geometry, program, mode });\n                                mesh.name = name;\n                                // TODO: support skin frustum culling\n                                mesh.frustumCulled = false;\n                                return mesh;\n                            }\n                        );\n                    });\n                    // For retrieval to add to node\n                    primitives.instanceCount = 0;\n                    primitives.numInstances = numInstances;\n                } else {\n                    primitives = this.parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap).map(\n                        ({ geometry, program, mode }) => {\n                            // InstancedMesh class has custom frustum culling for instances\n                            const meshConstructor = geometry.attributes.instanceMatrix ? InstancedMesh : Mesh;\n                            const mesh = new meshConstructor(gl, { geometry, program, mode });\n                            mesh.name = name;\n                            // Tag mesh so that nodes can add their transforms to the instance attribute\n                            mesh.numInstances = numInstances;\n                            return mesh;\n                        }\n                    );\n                }\n\n                return {\n                    primitives,\n                    weights,\n                    name,\n                };\n            }\n        );\n    }\n\n    static parsePrimitives(gl, primitives, desc, bufferViews, materials, numInstances, isLightmap) {\n        return primitives.map(\n            ({\n                attributes, // required\n                indices, // optional\n                material: materialIndex, // optional\n                mode = 4, // optional\n                targets, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                // TODO: materials\n                const program = new NormalProgram(gl);\n                if (materialIndex !== undefined) {\n                    program.gltfMaterial = materials[materialIndex];\n                }\n\n                const geometry = new Geometry(gl);\n\n                // Add each attribute found in primitive\n                for (let attr in attributes) {\n                    geometry.addAttribute(ATTRIBUTES[attr], this.parseAccessor(attributes[attr], desc, bufferViews));\n                }\n\n                // Add index attribute if found\n                if (indices !== undefined) {\n                    geometry.addAttribute('index', this.parseAccessor(indices, desc, bufferViews));\n                }\n\n                // Add instanced transform attribute if multiple instances\n                // Ignore if skin as we don't support instanced skins out of the box\n                if (numInstances > 1) {\n                    geometry.addAttribute('instanceMatrix', {\n                        instanced: 1,\n                        size: 16,\n                        data: new Float32Array(numInstances * 16),\n                    });\n                }\n\n                // Always supply lightmapScaleOffset as an instanced attribute\n                // Instanced skin lightmaps not supported\n                if (isLightmap) {\n                    geometry.addAttribute('lightmapScaleOffset', {\n                        instanced: 1,\n                        size: 4,\n                        data: new Float32Array(numInstances * 4),\n                    });\n                }\n\n                return {\n                    geometry,\n                    program,\n                    mode,\n                };\n            }\n        );\n    }\n\n    static parseAccessor(index, desc, bufferViews) {\n        // TODO: init missing bufferView with 0s\n        // TODO: support sparse\n\n        const {\n            bufferView: bufferViewIndex, // optional\n            byteOffset = 0, // optional\n            componentType, // required\n            normalized = false, // optional\n            count, // required\n            type, // required\n            min, // optional\n            max, // optional\n            sparse, // optional\n            // name, // optional\n            // extensions, // optional\n            // extras, // optional\n        } = desc.accessors[index];\n\n        const {\n            data, // attached in parseBufferViews\n            buffer, // replaced to be the actual GL buffer\n            byteOffset: bufferByteOffset = 0,\n            // byteLength, // applied in parseBufferViews\n            byteStride = 0,\n            target,\n            // name,\n            // extensions,\n            // extras,\n        } = bufferViews[bufferViewIndex];\n\n        const size = TYPE_SIZE[type];\n\n        // Parse data from joined buffers\n        const TypeArray = TYPE_ARRAY[componentType];\n        const elementBytes = TypeArray.BYTES_PER_ELEMENT;\n        const componentStride = byteStride / elementBytes;\n        const isInterleaved = !!byteStride && componentStride !== size;\n\n        let filteredData;\n\n        // Convert data to typed array for various uses (bounding boxes, raycasting, animation, merging etc)\n        if (isInterleaved) {\n            // First convert entire buffer to type\n            const typedData = new TypeArray(data, byteOffset);\n            // TODO: add length to not copy entire buffer if can help it\n            // const typedData = new TypeArray(data, byteOffset, (count - 1) * componentStride)\n\n            // Create output with length\n            filteredData = new TypeArray(count * size);\n\n            // Add element by element\n            for (let i = 0; i < count; i++) {\n                const start = componentStride * i;\n                const end = start + size;\n                filteredData.set(typedData.slice(start, end), i * size);\n            }\n        } else {\n            // Simply a slice\n            filteredData = new TypeArray(data, byteOffset, count * size);\n        }\n\n        // Return attribute data\n        return {\n            data: filteredData,\n            size,\n            type: componentType,\n            normalized,\n            buffer,\n            stride: byteStride,\n            offset: byteOffset,\n            count,\n            min,\n            max,\n        };\n    }\n\n    static parseNodes(gl, desc, meshes, skins, images) {\n        if (!desc.nodes) return null;\n        const nodes = desc.nodes.map(\n            ({\n                camera, // optional\n                children, // optional\n                skin: skinIndex, // optional\n                matrix, // optional\n                mesh: meshIndex, // optional\n                rotation, // optional\n                scale, // optional\n                translation, // optional\n                weights, // optional\n                name, // optional\n                extensions, // optional\n                extras, // optional\n            }) => {\n                const node = new Transform();\n                if (name) node.name = name;\n                node.extras = extras;\n                node.extensions = extensions;\n\n                // Need to attach to node as may have same material but different lightmap\n                if (extras && extras.lightmapTexture !== undefined) {\n                    extras.lightmapTexture.texture = this.createTexture(gl, desc, images, { source: extras.lightmapTexture.index });\n                }\n\n                // Apply transformations\n                if (matrix) {\n                    node.matrix.copy(matrix);\n                    node.decompose();\n                } else {\n                    if (rotation) node.quaternion.copy(rotation);\n                    if (scale) node.scale.copy(scale);\n                    if (translation) node.position.copy(translation);\n                    node.updateMatrix();\n                }\n\n                // Flags for avoiding duplicate transforms and removing unused instance nodes\n                let isInstanced = false;\n                let isFirstInstance = true;\n                let isInstancedMatrix = false;\n                let isSkin = skinIndex !== undefined;\n\n                // add mesh if included\n                if (meshIndex !== undefined) {\n                    if (isSkin) {\n                        meshes[meshIndex].primitives[meshes[meshIndex].primitives.instanceCount].forEach((mesh) => {\n                            mesh.extras = extras;\n                            mesh.setParent(node);\n                        });\n                        meshes[meshIndex].primitives.instanceCount++;\n                        // Remove properties once all instances added\n                        if (meshes[meshIndex].primitives.instanceCount === meshes[meshIndex].primitives.numInstances) {\n                            delete meshes[meshIndex].primitives.numInstances;\n                            delete meshes[meshIndex].primitives.instanceCount;\n                        }\n                    } else {\n                        meshes[meshIndex].primitives.forEach((mesh) => {\n                            mesh.extras = extras;\n\n                            // instanced mesh might only have 1\n                            if (mesh.geometry.isInstanced) {\n                                isInstanced = true;\n                                if (!mesh.instanceCount) {\n                                    mesh.instanceCount = 0;\n                                } else {\n                                    isFirstInstance = false;\n                                }\n                                if (mesh.geometry.attributes.instanceMatrix) {\n                                    isInstancedMatrix = true;\n                                    node.matrix.toArray(mesh.geometry.attributes.instanceMatrix.data, mesh.instanceCount * 16);\n                                }\n\n                                if (mesh.geometry.attributes.lightmapScaleOffset) {\n                                    mesh.geometry.attributes.lightmapScaleOffset.data.set(extras.lightmap_scale_offset, mesh.instanceCount * 4);\n                                }\n\n                                mesh.instanceCount++;\n\n                                if (mesh.instanceCount === mesh.numInstances) {\n                                    // Remove properties once all instances added\n                                    delete mesh.numInstances;\n                                    delete mesh.instanceCount;\n                                    // Flag attribute as dirty\n                                    if (mesh.geometry.attributes.instanceMatrix) {\n                                        mesh.geometry.attributes.instanceMatrix.needsUpdate = true;\n                                    }\n                                    if (mesh.geometry.attributes.lightmapScaleOffset) {\n                                        mesh.geometry.attributes.lightmapScaleOffset.needsUpdate = true;\n                                    }\n                                }\n                            }\n\n                            // For instances, only the first node will actually have the mesh\n                            if (isInstanced) {\n                                if (isFirstInstance) mesh.setParent(node);\n                            } else {\n                                mesh.setParent(node);\n                            }\n                        });\n                    }\n                }\n\n                // Reset node if instanced to not duplicate transforms\n                if (isInstancedMatrix) {\n                    // Remove unused nodes just providing an instance transform\n                    if (!isFirstInstance) return null;\n                    // Avoid duplicate transform for node containing the instanced mesh\n                    node.matrix.identity();\n                    node.decompose();\n                }\n\n                return node;\n            }\n        );\n\n        desc.nodes.forEach(({ children = [] }, i) => {\n            // Set hierarchy now all nodes created\n            children.forEach((childIndex) => {\n                if (!nodes[childIndex]) return;\n                nodes[childIndex].setParent(nodes[i]);\n            });\n        });\n\n        // Add frustum culling for instances now that instanceMatrix attribute is populated\n        meshes.forEach(({ primitives }, i) => {\n            primitives.forEach((primitive, i) => {\n                if (primitive.isInstancedMesh) primitive.addFrustumCull();\n            });\n        });\n\n        return nodes;\n    }\n\n    static populateSkins(skins, nodes) {\n        if (!skins) return;\n        skins.forEach((skin) => {\n            skin.joints = skin.joints.map((i, index) => {\n                const joint = nodes[i];\n                joint.skin = skin;\n                joint.bindInverse = new Mat4(...skin.inverseBindMatrices.data.slice(index * 16, (index + 1) * 16));\n                return joint;\n            });\n            if (skin.skeleton) skin.skeleton = nodes[skin.skeleton];\n        });\n    }\n\n    static parseAnimations(gl, desc, nodes, bufferViews) {\n        if (!desc.animations) return null;\n        return desc.animations.map(\n            (\n                {\n                    channels, // required\n                    samplers, // required\n                    name, // optional\n                    // extensions, // optional\n                    // extras,  // optional\n                },\n                animationIndex\n            ) => {\n                const data = channels.map(\n                    ({\n                        sampler: samplerIndex, // required\n                        target, // required\n                        // extensions, // optional\n                        // extras, // optional\n                    }) => {\n                        const {\n                            input: inputIndex, // required\n                            interpolation = 'LINEAR',\n                            output: outputIndex, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = samplers[samplerIndex];\n\n                        const {\n                            node: nodeIndex, // optional - TODO: when is it not included?\n                            path, // required\n                            // extensions, // optional\n                            // extras, // optional\n                        } = target;\n\n                        const node = nodes[nodeIndex];\n                        const transform = TRANSFORMS[path];\n                        const times = this.parseAccessor(inputIndex, desc, bufferViews).data;\n                        const values = this.parseAccessor(outputIndex, desc, bufferViews).data;\n\n                        // Store reference on node for cyclical retrieval\n                        if (!node.animations) node.animations = [];\n                        if (!node.animations.includes(animationIndex)) node.animations.push(animationIndex);\n\n                        return {\n                            node,\n                            transform,\n                            interpolation,\n                            times,\n                            values,\n                        };\n                    }\n                );\n\n                return {\n                    name,\n                    animation: new GLTFAnimation(data),\n                };\n            }\n        );\n    }\n\n    static parseScenes(desc, nodes) {\n        if (!desc.scenes) return null;\n        return desc.scenes.map(\n            ({\n                nodes: nodesIndices = [],\n                name, // optional\n                extensions,\n                extras,\n            }) => {\n                const scene = nodesIndices.reduce((map, i) => {\n                    // Don't add null nodes (instanced transforms)\n                    if (nodes[i]) map.push(nodes[i]);\n                    return map;\n                }, []);\n                scene.extras = extras;\n                return scene;\n            }\n        );\n    }\n\n    static parseLights(gl, desc, nodes, scenes) {\n        const lights = {\n            directional: [],\n            point: [],\n            spot: [],\n        };\n\n        // Update matrices on root nodes\n        scenes.forEach((scene) => scene.forEach((node) => node.updateMatrixWorld()));\n\n        // uses KHR_lights_punctual extension\n        const lightsDescArray = desc.extensions?.KHR_lights_punctual?.lights || [];\n\n        // Need nodes for transforms\n        nodes.forEach((node) => {\n            if (!node?.extensions?.KHR_lights_punctual) return;\n            const lightIndex = node.extensions.KHR_lights_punctual.light;\n            const lightDesc = lightsDescArray[lightIndex];\n            const light = {\n                name: lightDesc.name || '',\n                color: { value: new Vec3().set(lightDesc.color || 1) },\n            };\n            // Apply intensity directly to color\n            if (lightDesc.intensity !== undefined) light.color.value.multiply(lightDesc.intensity);\n\n            switch (lightDesc.type) {\n                case 'directional':\n                    light.direction = { value: new Vec3(0, 0, 1).transformDirection(node.worldMatrix) };\n                    break;\n                case 'point':\n                    light.position = { value: new Vec3().applyMatrix4(node.worldMatrix) };\n                    light.distance = { value: lightDesc.range };\n                    light.decay = { value: 2 };\n                    break;\n                case 'spot':\n                    // TODO: support spot uniforms\n                    Object.assign(light, lightDesc);\n                    break;\n            }\n\n            lights[lightDesc.type].push(light);\n        });\n\n        return lights;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = new Vec3();\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","// TODO: barycentric code shouldn't be here, but where?\n// TODO: SphereCast?\n\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nconst tempVec2a = new Vec2();\nconst tempVec2b = new Vec2();\nconst tempVec2c = new Vec2();\n\nconst tempVec3a = new Vec3();\nconst tempVec3b = new Vec3();\nconst tempVec3c = new Vec3();\nconst tempVec3d = new Vec3();\nconst tempVec3e = new Vec3();\nconst tempVec3f = new Vec3();\nconst tempVec3g = new Vec3();\nconst tempVec3h = new Vec3();\nconst tempVec3i = new Vec3();\nconst tempVec3j = new Vec3();\nconst tempVec3k = new Vec3();\n\nconst tempMat4 = new Mat4();\n\nexport class Raycast {\n    constructor() {\n        this.origin = new Vec3();\n        this.direction = new Vec3();\n    }\n\n    // Set ray from mouse unprojection\n    castMouse(camera, mouse = [0, 0]) {\n        if (camera.type === 'orthographic') {\n            // Set origin\n            // Since camera is orthographic, origin is not the camera position\n            const { left, right, bottom, top, zoom } = camera;\n            const x = left / zoom + ((right - left) / zoom) * (mouse[0] * 0.5 + 0.5);\n            const y = bottom / zoom + ((top - bottom) / zoom) * (mouse[1] * 0.5 + 0.5);\n            this.origin.set(x, y, 0);\n            this.origin.applyMatrix4(camera.worldMatrix);\n\n            // Set direction\n            // https://community.khronos.org/t/get-direction-from-transformation-matrix-or-quat/65502/2\n            this.direction.x = -camera.worldMatrix[8];\n            this.direction.y = -camera.worldMatrix[9];\n            this.direction.z = -camera.worldMatrix[10];\n        } else {\n            // Set origin\n            camera.worldMatrix.getTranslation(this.origin);\n\n            // Set direction\n            this.direction.set(mouse[0], mouse[1], 0.5);\n            camera.unproject(this.direction);\n            this.direction.sub(this.origin).normalize();\n        }\n    }\n\n    intersectBounds(meshes, { maxDistance, output = [] } = {}) {\n        if (!Array.isArray(meshes)) meshes = [meshes];\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n\n        const hits = output;\n        hits.length = 0;\n\n        meshes.forEach((mesh) => {\n            // Create bounds\n            if (!mesh.geometry.bounds || mesh.geometry.bounds.radius === Infinity) mesh.geometry.computeBoundingSphere();\n            const bounds = mesh.geometry.bounds;\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            // Break out early if bounds too far away from origin\n            if (maxDistance) {\n                if (origin.distance(bounds.center) - bounds.radius > localMaxDistance) return;\n            }\n\n            let localDistance = 0;\n\n            // Check origin isn't inside bounds before testing intersection\n            if (mesh.geometry.raycast === 'sphere') {\n                if (origin.distance(bounds.center) > bounds.radius) {\n                    localDistance = this.intersectSphere(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            } else {\n                if (\n                    origin.x < bounds.min.x ||\n                    origin.x > bounds.max.x ||\n                    origin.y < bounds.min.y ||\n                    origin.y > bounds.max.y ||\n                    origin.z < bounds.min.z ||\n                    origin.z > bounds.max.z\n                ) {\n                    localDistance = this.intersectBox(bounds, origin, direction);\n                    if (!localDistance) return;\n                }\n            }\n\n            if (maxDistance && localDistance > localMaxDistance) return;\n\n            // Create object on mesh to avoid generating lots of objects\n            if (!mesh.hit) mesh.hit = { localPoint: new Vec3(), point: new Vec3() };\n\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            hits.push(mesh);\n        });\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectMeshes(meshes, { cullFace = true, maxDistance, includeUV = true, includeNormal = true, output = [] } = {}) {\n        // Test bounds first before testing geometry\n        const hits = this.intersectBounds(meshes, { maxDistance, output });\n        if (!hits.length) return hits;\n\n        const invWorldMat4 = tempMat4;\n        const origin = tempVec3a;\n        const direction = tempVec3b;\n        const a = tempVec3c;\n        const b = tempVec3d;\n        const c = tempVec3e;\n        const closestFaceNormal = tempVec3f;\n        const faceNormal = tempVec3g;\n        const barycoord = tempVec3h;\n        const uvA = tempVec2a;\n        const uvB = tempVec2b;\n        const uvC = tempVec2c;\n\n        for (let i = hits.length - 1; i >= 0; i--) {\n            const mesh = hits[i];\n            invWorldMat4.inverse(mesh.worldMatrix);\n\n            // Get max distance locally\n            let localMaxDistance;\n            if (maxDistance) {\n                direction.copy(this.direction).scaleRotateMatrix4(invWorldMat4);\n                localMaxDistance = maxDistance * direction.len();\n            }\n\n            // Take world space ray and make it object space to align with bounding box\n            origin.copy(this.origin).applyMatrix4(invWorldMat4);\n            direction.copy(this.direction).transformDirection(invWorldMat4);\n\n            let localDistance = 0;\n            let closestA, closestB, closestC;\n\n            const geometry = mesh.geometry;\n            const attributes = geometry.attributes;\n            const index = attributes.index;\n            const position = attributes.position;\n\n            const start = Math.max(0, geometry.drawRange.start);\n            const end = Math.min(index ? index.count : position.count, geometry.drawRange.start + geometry.drawRange.count);\n            // Data loaded shouldn't haave stride, only buffers\n            // const stride = position.stride ? position.stride / position.data.BYTES_PER_ELEMENT : position.size;\n            const stride = position.size;\n\n            for (let j = start; j < end; j += 3) {\n                // Position attribute indices for each triangle\n                const ai = index ? index.data[j] : j;\n                const bi = index ? index.data[j + 1] : j + 1;\n                const ci = index ? index.data[j + 2] : j + 2;\n\n                a.fromArray(position.data, ai * stride);\n                b.fromArray(position.data, bi * stride);\n                c.fromArray(position.data, ci * stride);\n\n                const distance = this.intersectTriangle(a, b, c, cullFace, origin, direction, faceNormal);\n                if (!distance) continue;\n\n                // Too far away\n                if (maxDistance && distance > localMaxDistance) continue;\n\n                if (!localDistance || distance < localDistance) {\n                    localDistance = distance;\n                    closestA = ai;\n                    closestB = bi;\n                    closestC = ci;\n                    closestFaceNormal.copy(faceNormal);\n                }\n            }\n\n            if (!localDistance) hits.splice(i, 1);\n\n            // Update hit values from bounds-test\n            mesh.hit.localPoint.copy(direction).multiply(localDistance).add(origin);\n            mesh.hit.point.copy(mesh.hit.localPoint).applyMatrix4(mesh.worldMatrix);\n            mesh.hit.distance = mesh.hit.point.distance(this.origin);\n\n            // Add unique hit objects on mesh to avoid generating lots of objects\n            if (!mesh.hit.faceNormal) {\n                mesh.hit.localFaceNormal = new Vec3();\n                mesh.hit.faceNormal = new Vec3();\n                mesh.hit.uv = new Vec2();\n                mesh.hit.localNormal = new Vec3();\n                mesh.hit.normal = new Vec3();\n            }\n\n            // Add face normal data which is already computed\n            mesh.hit.localFaceNormal.copy(closestFaceNormal);\n            mesh.hit.faceNormal.copy(mesh.hit.localFaceNormal).transformDirection(mesh.worldMatrix);\n\n            // Optional data, opt out to optimise a bit if necessary\n            if (includeUV || includeNormal) {\n                // Calculate barycoords to find uv values at hit point\n                a.fromArray(position.data, closestA * 3);\n                b.fromArray(position.data, closestB * 3);\n                c.fromArray(position.data, closestC * 3);\n                this.getBarycoord(mesh.hit.localPoint, a, b, c, barycoord);\n            }\n\n            if (includeUV && attributes.uv) {\n                uvA.fromArray(attributes.uv.data, closestA * 2);\n                uvB.fromArray(attributes.uv.data, closestB * 2);\n                uvC.fromArray(attributes.uv.data, closestC * 2);\n                mesh.hit.uv.set(\n                    uvA.x * barycoord.x + uvB.x * barycoord.y + uvC.x * barycoord.z,\n                    uvA.y * barycoord.x + uvB.y * barycoord.y + uvC.y * barycoord.z\n                );\n            }\n\n            if (includeNormal && attributes.normal) {\n                a.fromArray(attributes.normal.data, closestA * 3);\n                b.fromArray(attributes.normal.data, closestB * 3);\n                c.fromArray(attributes.normal.data, closestC * 3);\n                mesh.hit.localNormal.set(\n                    a.x * barycoord.x + b.x * barycoord.y + c.x * barycoord.z,\n                    a.y * barycoord.x + b.y * barycoord.y + c.y * barycoord.z,\n                    a.z * barycoord.x + b.z * barycoord.y + c.z * barycoord.z\n                );\n\n                mesh.hit.normal.copy(mesh.hit.localNormal).transformDirection(mesh.worldMatrix);\n            }\n        }\n\n        hits.sort((a, b) => a.hit.distance - b.hit.distance);\n        return hits;\n    }\n\n    intersectPlane(plane, origin = this.origin, direction = this.direction) {\n        const xminp = tempVec3a;\n        xminp.sub(plane.origin, origin);\n\n        const a = xminp.dot(plane.normal);\n        const b = direction.dot(plane.normal);\n        // Assuming we don't want to count a ray parallel to the plane as intersecting\n        if (b == 0) return 0;\n        const delta = a / b;\n        if (delta <= 0) return 0;\n        return origin.add(direction.scale(delta));\n    }\n\n    intersectSphere(sphere, origin = this.origin, direction = this.direction) {\n        const ray = tempVec3c;\n        ray.sub(sphere.center, origin);\n        const tca = ray.dot(direction);\n        const d2 = ray.dot(ray) - tca * tca;\n        const radius2 = sphere.radius * sphere.radius;\n        if (d2 > radius2) return 0;\n        const thc = Math.sqrt(radius2 - d2);\n        const t0 = tca - thc;\n        const t1 = tca + thc;\n        if (t0 < 0 && t1 < 0) return 0;\n        if (t0 < 0) return t1;\n        return t0;\n    }\n\n    // Ray AABB - Ray Axis aligned bounding box testing\n    intersectBox(box, origin = this.origin, direction = this.direction) {\n        let tmin, tmax, tYmin, tYmax, tZmin, tZmax;\n        const invdirx = 1 / direction.x;\n        const invdiry = 1 / direction.y;\n        const invdirz = 1 / direction.z;\n        const min = box.min;\n        const max = box.max;\n        tmin = ((invdirx >= 0 ? min.x : max.x) - origin.x) * invdirx;\n        tmax = ((invdirx >= 0 ? max.x : min.x) - origin.x) * invdirx;\n        tYmin = ((invdiry >= 0 ? min.y : max.y) - origin.y) * invdiry;\n        tYmax = ((invdiry >= 0 ? max.y : min.y) - origin.y) * invdiry;\n        if (tmin > tYmax || tYmin > tmax) return 0;\n        if (tYmin > tmin) tmin = tYmin;\n        if (tYmax < tmax) tmax = tYmax;\n        tZmin = ((invdirz >= 0 ? min.z : max.z) - origin.z) * invdirz;\n        tZmax = ((invdirz >= 0 ? max.z : min.z) - origin.z) * invdirz;\n        if (tmin > tZmax || tZmin > tmax) return 0;\n        if (tZmin > tmin) tmin = tZmin;\n        if (tZmax < tmax) tmax = tZmax;\n        if (tmax < 0) return 0;\n        return tmin >= 0 ? tmin : tmax;\n    }\n\n    intersectTriangle(a, b, c, backfaceCulling = true, origin = this.origin, direction = this.direction, normal = tempVec3g) {\n        // from https://github.com/mrdoob/three.js/blob/master/src/math/Ray.js\n        // which is from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n        const edge1 = tempVec3h;\n        const edge2 = tempVec3i;\n        const diff = tempVec3j;\n        edge1.sub(b, a);\n        edge2.sub(c, a);\n        normal.cross(edge1, edge2);\n        let DdN = direction.dot(normal);\n        if (!DdN) return 0;\n        let sign;\n        if (DdN > 0) {\n            if (backfaceCulling) return 0;\n            sign = 1;\n        } else {\n            sign = -1;\n            DdN = -DdN;\n        }\n        diff.sub(origin, a);\n        let DdQxE2 = sign * direction.dot(edge2.cross(diff, edge2));\n        if (DdQxE2 < 0) return 0;\n        let DdE1xQ = sign * direction.dot(edge1.cross(diff));\n        if (DdE1xQ < 0) return 0;\n        if (DdQxE2 + DdE1xQ > DdN) return 0;\n        let QdN = -sign * diff.dot(normal);\n        if (QdN < 0) return 0;\n        return QdN / DdN;\n    }\n\n    getBarycoord(point, a, b, c, target = tempVec3h) {\n        // From https://github.com/mrdoob/three.js/blob/master/src/math/Triangle.js\n        // static/instance method to calculate barycentric coordinates\n        // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n        const v0 = tempVec3i;\n        const v1 = tempVec3j;\n        const v2 = tempVec3k;\n        v0.sub(c, a);\n        v1.sub(b, a);\n        v2.sub(point, a);\n        const dot00 = v0.dot(v0);\n        const dot01 = v0.dot(v1);\n        const dot02 = v0.dot(v2);\n        const dot11 = v1.dot(v1);\n        const dot12 = v1.dot(v2);\n        const denom = dot00 * dot11 - dot01 * dot01;\n        if (denom === 0) return target.set(-2, -1, -1);\n        const invDenom = 1 / denom;\n        const u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n        const v = (dot00 * dot12 - dot01 * dot02) * invDenom;\n        return target.set(1 - u - v, v, u);\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        this.state.currentProgram = null;\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        if (!this.gl.canvas.style) return;\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Plane } from './Plane.js';\n\nexport class Box extends Geometry {\n    constructor(gl, { width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n        const dSegs = depthSegments;\n\n        const num = (wSegs + 1) * (hSegs + 1) * 2 + (wSegs + 1) * (dSegs + 1) * 2 + (hSegs + 1) * (dSegs + 1) * 2;\n        const numIndices = (wSegs * hSegs * 2 + wSegs * dSegs * 2 + hSegs * dSegs * 2) * 6;\n\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = num > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        let i = 0;\n        let ii = 0;\n\n        // left, right\n        Plane.buildPlane(position, normal, uv, index, depth, height, width, dSegs, hSegs, 2, 1, 0, -1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, depth, height, -width, dSegs, hSegs, 2, 1, 0, 1, -1, i, ii);\n        i += (dSegs + 1) * (hSegs + 1);\n        ii += dSegs * hSegs;\n\n        // top, bottom\n        Plane.buildPlane(position, normal, uv, index, width, depth, height, dSegs, wSegs, 0, 2, 1, 1, 1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, depth, -height, dSegs, wSegs, 0, 2, 1, 1, -1, i, ii);\n        i += (wSegs + 1) * (dSegs + 1);\n        ii += wSegs * dSegs;\n\n        // front, back\n        Plane.buildPlane(position, normal, uv, index, width, height, -depth, wSegs, hSegs, 0, 1, 2, -1, -1, i, ii);\n        i += (wSegs + 1) * (hSegs + 1);\n        ii += wSegs * hSegs;\n\n        Plane.buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, 0, 1, 2, 1, -1, i, ii);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n}\n","import { Program, Mesh, Texture, Box } from './ogl/src/index.mjs';\n\nexport class SkyBox extends Mesh {\n    constructor(gl, imgArray) {\n        const texture = new Texture(gl, {image: imgArray, target: gl.TEXTURE_CUBE_MAP});\n        const geometry = new Box(gl);\n        const program = new Program(gl, {\n            vertex: `#version 300 es\n            in vec3 position;\n            out vec3 uv;\n\n            uniform mat4 modelViewMatrix;\n            uniform mat4 projectionMatrix;\n\n            void main() {\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                uv = position;\n            }\n            `,\n            fragment: `#version 300 es\n            precision highp float;\n            //uniform samplerCube tMap;\n            in vec3 uv;\n            out vec4 outColor;\n\n            void main() {\n                float sky = clamp(uv.y + 0.5, 0.0, 1.0);\n                //outColor = texture(tMap, uv);\n                outColor = vec4(sky / 2.0, sky / 2.0, sky, 1.0);\n            }\n            `,\n            //uniforms: {\n            //    tMap: { value: texture },\n            //},\n            cullFace: null,\n        });\n\n        super(gl, {geometry, program});\n        this.worldMatrix.scale(100);\n        this.beforeRenderCallbacks = [\n            () => {\n                this.program.uniforms.modelViewMatrix.value.setPosition([0, 0, 0]);\n            }\n        ];\n    }\n\n    updateMatrix() {\n        return;\n    }\n    updateMatrixWorld(force) {\n        return;\n    }\n}\n","export class MessageBus {\n  constructor () {\n    this.types = {};\n  }\n\n  register(type, func) {\n    if (this.types[type] === undefined) {this.types[type] = [];}\n    const index = this.types[type].push(func);\n    // (index - 1) because the push method returns the length of the array\n    return () => {delete this.types[type][index-1]};\n  }\n\n  send(type, data) {\n    if(type in this.types) {\n      for (const func of this.types[type]) {\n        func(data);\n      }\n    }\n  }\n}\n","export function makeButtonInList(buttonLabel, listId, callback) {\n  const li = document.createElement(\"li\");\n  const button = document.createElement(\"button\");\n  button.append(buttonLabel);\n  button.addEventListener(\"click\", callback);\n  li.append(button);\n  document.getElementById(listId).append(li);\n}\n","import { Vec2, Vec3, Mesh } from './ogl/src/index.mjs';\nimport {makeButtonInList} from './ui.js';\n\nconst STATE = {EDIT: 0, GRAB: 1, DISABLED: 2}\nconst PLANE = {origin: new Vec3(0, 0, 0), normal: new Vec3(0, 1, 0)}\n\nexport class EditMode {\n  constructor({msgBus = msgBus,\n               assets = assets,\n               raycast = raycast,\n               scene = scene,\n               camera = camera,\n               renderer = renderer}) {\n    this.state = STATE.EDIT;\n    this.heldObject = null;\n    this.gl = renderer.gl;\n    this.canvas = this.gl.canvas;\n    this.msgBus = msgBus;\n    this.assets = assets;\n    this.raycast = raycast;\n    this.scene = scene;\n    this.camera = camera;\n    this.renderer = renderer;\n    this.mouse = new Vec2();\n    this.objectList = [];\n    this.msgBus.register(\"onAssetsLoaded\", () => {this.setupAssets()});\n    this.registerCallbacks();\n  }\n  setupAssets() {\n    for (const assetId in this.assets) {\n      makeButtonInList(this.assets[assetId].name, \"buttonList\", (event) => {\n        if (this.heldObject) this.heldObject = undefined;\n        this.heldObject = new Mesh(this.gl, this.assets[assetId]);\n        this.state = STATE.GRAB;\n        this.heldObject.position[2] = -1000;\n        this.heldObject.setParent(this.scene);\n      });\n    }\n    makeButtonInList(\"Clear\", \"buttonList\", () => {\n      if (this.heldObject) {\n        this.heldObject.setParent(null);\n        this.heldObject = undefined;\n        this.state = STATE.EDIT;\n      }\n    });\n  }\n\n  pointerDown(e) {\n    this.mouse.set(2.0 * (e.x / this.renderer.width) - 1.0, 2.0 * (1.0 - e.y / this.renderer.height) - 1.0);\n    this.raycast.castMouse(this.camera, this.mouse);\n    switch ( this.state ) {\n      case STATE.GRAB:\n        // calculates clipspace coords of pointer\n        const intersection = this.raycast.intersectPlane(PLANE);\n        if (intersection) {\n          this.heldObject.position = intersection.clone();\n        }\n        this.state = STATE.EDIT;\n        this.objectList.push(this.heldObject);\n        this.heldObject = undefined;\n        break;\n      case STATE.EDIT:\n        const hits = this.raycast.intersectMeshes(this.objectList, {includeUV: false, includeNormal: false});\n        if (hits.length) {\n          this.heldObject = hits[0];\n          console.log(this.heldObject);\n          const objIndex = this.objectList.find((obj) => obj.id == hits[0].id);\n          if (objIndex > -1) {this.objectList.splice(objIndex, 1)}\n          this.state = STATE.GRAB;\n        }\n    }\n  }\n  pointerMove(e) {\n    if ( this.state == STATE.GRAB ) {\n      this.mouse.set(2.0 * (e.x / this.renderer.width) - 1.0, 2.0 * (1.0 - e.y / this.renderer.height) - 1.0);\n      this.raycast.castMouse(this.camera, this.mouse);\n      const intersection = this.raycast.intersectPlane(PLANE);\n      if (intersection) {\n        this.heldObject.position = intersection.clone();\n      }\n    }\n  }\n  registerCallbacks() {\n    this.canvas.addEventListener('pointerdown', (e) => this.pointerDown(e));\n    this.canvas.addEventListener('pointermove', (e) => this.pointerMove(e));\n  }\n\n  unregisterCallbacks() {\n\n  }\n}\n","import { Renderer, Camera, Transform, Orbit, Program, Mesh, Sphere,\n         GLTFLoader, BasisManager, Texture, Box, Raycast, Vec2, Vec3 } from './ogl/src/index.mjs';\nimport {SkyBox} from './skybox.js';\nimport {MessageBus} from './abstract.js';\nimport {EditMode} from './editmode.js';\n\nfunction shallowClone(obj) {\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\n}\n\nfunction init() {\n    const canvasElem = document.querySelector(\"#renderCanvas\");\n    const renderer = new Renderer({ dpr: 1, canvas: canvasElem });\n    const gl = renderer.gl;\n\n    const msgBus = new MessageBus();\n\n    let view = new Vec3(0, 0, 0);\n    const program = new Program(gl, {\n        vertex: /* glsl */ `#version 300 es\n            in vec3 position;\n            in vec4 color;\n            in vec3 normal;\n            uniform vec3 view;\n            //in vec2 uv;\n\n            uniform mat4 modelViewMatrix;\n            uniform mat4 projectionMatrix;\n            //out vec2 v_uv;\n            out vec4 vColor;\n            out vec3 vNormal;\n            out vec3 vView;\n\n            void main() {\n                vView = normalize(view);\n                gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                vColor = color;\n                vNormal = normal;\n                //v_uv = uv;\n            }\n        `,\n        fragment: /* glsl */ `#version 300 es\n            precision highp float;\n            //in vec2 v_uv;\n            in vec4 vColor;\n            in vec3 vNormal;\n            in vec3 vView;\n            out vec4 outColor;\n            //uniform sampler2D tBaseColor;\n            void main() {\n                vec3 light = vec3(0, 1, 0);\n                vec3 normal = normalize(vNormal);\n                float t = (dot(normal, light) + 1.0) / 2.0;\n                vec3 r = 2.0 * dot(normal, light) * normal - light;\n                float s = clamp(100.0 * dot(r, vView) - 97.0, 0.0, 1.0);\n\n                vec3 cool = vec3(0.2, 0.2, 0.6) * t + t * vColor.xyz;\n                vec3 warm = vec3(0.3, 0.3, 0.0) + 0.25 * vColor.xyz;\n                vec3 highlight = vec3(1.0, 1.0, 1.0);\n                vec3 shaded = vec3(1.0, 1.0, 1.0) * s + cool * (1.0 - s);\n                //outColor = texture(tBaseColor, v_uv);\n                outColor = vec4(shaded, 1.0);\n            }\n        `,\n        uniforms: {view: view},\n    });\n    const emptyTex = new Texture(gl);\n    const camera = new Camera(gl, { near: 0.1, far: 10000 });\n\n\n    function resize() {\n        //renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setSize(canvasElem.parentNode.clientWidth, canvasElem.parentNode.clientHeight);\n        camera.perspective({ aspect: gl.canvas.width / gl.canvas.height });\n    }\n    window.addEventListener('resize', resize, false);\n    resize();\n\n    const controls = new Orbit(camera, {element: canvasElem});\n    const assets = {};\n\n    camera.position\n          .set(0, 0.5, -1)\n          .normalize()\n          .multiply(2.5)\n          .add([5, 5, -5]);\n    controls.target.copy([0, 2, 2]);\n    controls.forcePosition();\n    const scene = new Transform();\n    const raycast = new Raycast(gl);\n    const editMode = new EditMode({msgBus: msgBus,\n                                   assets: assets,\n                                   raycast: raycast,\n                                   scene: scene,\n                                   camera: camera,\n                                   renderer: renderer});\n\n    loadAssets();\n    async function loadAssets() {\n        const gltf = await GLTFLoader.load(gl, `assets.glb`);\n        console.log(gltf);\n        const s = gltf.scene || gltf.scenes[0];\n        s.forEach((root) => {\n            root.traverse((node) => {\n                if (node.geometry && node.extras.asset_id) {assets[node.extras.asset_id] = node}\n                if (node.program) {\n                    const material = node.program.gltfMaterial || {};\n                    node.program = program;\n                    // node.program.uniforms =\n                    //  {tBaseColor: {value: material.baseColorTexture ? material.baseColorTexture.texture : emptyTex}};\n                }\n            });\n        });\n\n        // function loadImage(src) {\n        //     return new Promise((res) => {\n        //         const img = new Image();\n        //         img.onload = () => res(img);\n        //         img.src = src;\n        //     });\n        // }\n\n        // const images = await Promise.all([\n        //     loadImage('skybox/posx.jpg'),\n        //     loadImage('skybox/negx.jpg'),\n        //     loadImage('skybox/posy.jpg'),\n        //     loadImage('skybox/negy.jpg'),\n        //     loadImage('skybox/posz.jpg'),\n        //     loadImage('skybox/negz.jpg'),\n        // ]);\n\n        const skybox = new SkyBox(gl);\n        skybox.setParent(scene);\n        msgBus.send(\"onAssetsLoaded\");\n    }\n\n    requestAnimationFrame(update);\n    function update() {\n        requestAnimationFrame(update);\n        controls.update();\n        view.set(0, 0, 1);\n        view.applyQuaternion(camera.quaternion);\n        program.uniforms.view.value = view;\n        renderer.render({ scene, camera, sort: false, frustumCull: false });\n    }\n}\n\ninit();\n"],"names":["$6e5ae594b18f4b24$export$f24224f1c91d8156","a","x","y","z","Math","sqrt","$6e5ae594b18f4b24$export$784d13d8ee351f07","out","$6e5ae594b18f4b24$export$e16d8520af44a096","b","$6e5ae594b18f4b24$export$4e2d2ead65e5f7e3","$6e5ae594b18f4b24$export$dcdf75081b88279d","$6e5ae594b18f4b24$export$ab44e1323ffc8376","$6e5ae594b18f4b24$export$a3295358bff77e","len","$6e5ae594b18f4b24$export$94132a0e348806d4","$6e5ae594b18f4b24$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","$6e5ae594b18f4b24$export$944b09d2ad10b378","tempA","tempB","cosine","PI","acos","$b325b006ce0346f9$export$838423f3adec30fa","Array","constructor","super","this","v","set","length","copy","$6e5ae594b18f4b24$export$adaa4cf7ef1b65be","add","va","vb","sub","multiply","divide","inverse","distance","$6e5ae594b18f4b24$export$9f17032d917177de","squaredLen","squaredDistance","$6e5ae594b18f4b24$export$88e6ebb4fe54f538","negate","cross","scale","normalize","dot","equals","applyMatrix3","mat3","m","$6e5ae594b18f4b24$export$f0bfa0a0024626ee","applyMatrix4","mat4","w","$6e5ae594b18f4b24$export$5ffbd13800309d59","scaleRotateMatrix4","$6e5ae594b18f4b24$export$58ce737ad0c12bc2","applyQuaternion","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$6e5ae594b18f4b24$export$c32adef9e939ce85","angle","lerp","t","$6e5ae594b18f4b24$export$3a89f8d6f6bf6c9f","clone","fromArray","o","toArray","transformDirection","$b0ced09a683143f6$export$784d13d8ee351f07","$b0ced09a683143f6$export$adaa4cf7ef1b65be","$b0ced09a683143f6$export$dcdf75081b88279d","$b0ced09a683143f6$export$a3295358bff77e","$b0ced09a683143f6$export$94132a0e348806d4","$8fc4f760c8af5c7a$export$2060d2db72cce88f","aw","bw","$8fc4f760c8af5c7a$export$784d13d8ee351f07","$8fc4f760c8af5c7a$export$adaa4cf7ef1b65be","$8fc4f760c8af5c7a$export$94132a0e348806d4","$8fc4f760c8af5c7a$export$a3295358bff77e","$efaea8fa37582fba$export$5edfe12bb88684c8","onChange","identity","rotateX","rad","sin","cos","$8fc4f760c8af5c7a$export$a59c8716592e09af","rotateY","$8fc4f760c8af5c7a$export$cf71e4d4ca4d1cfd","rotateZ","$8fc4f760c8af5c7a$export$ea6eae3365de5b9c","a0","a1","a2","a3","invDot","$8fc4f760c8af5c7a$export$6897c284b6f9f4dc","conjugate","qA","qB","fromMatrix3","matrix3","fRoot","fTrace","i","j","k","$8fc4f760c8af5c7a$export$272a1eb8e5a4b55b","fromEuler","euler","order","sx","cx","sy","cy","sz","cz","$8fc4f760c8af5c7a$export$7a404a587ea85af","fromAxisAngle","axis","s","$8fc4f760c8af5c7a$export$4286ddefc8f49512","slerp","omega","cosom","sinom","scale0","scale1","$8fc4f760c8af5c7a$export$1544d9bc2995de08","$a080563c84f47965$export$2060d2db72cce88f","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","$a080563c84f47965$export$71dc54d92bd04b57","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","hypot","$a080563c84f47965$export$df3937d3b537df0a","temp","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$a080563c84f47965$export$e16d8520af44a096","$a080563c84f47965$export$4e2d2ead65e5f7e3","$36b40892c951a7f9$export$21c0e3d5e995d7e1","m00","m01","m02","m03","m10","m20","m30","$a080563c84f47965$export$adaa4cf7ef1b65be","translate","$a080563c84f47965$export$d73ee8ef04f5226a","rotate","c","b00","b01","b02","b10","b11","b12","b20","b21","b22","abs","$a080563c84f47965$export$bb628a54ab399bc9","$a080563c84f47965$export$dcdf75081b88279d","ma","mb","fromPerspective","fov","aspect","near","far","fovy","f","tan","nf","$a080563c84f47965$export$541149539f3a4684","fromOrthogonal","left","right","bottom","top","lr","bt","$a080563c84f47965$export$4f2167e613cfc87b","fromQuaternion","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","$a080563c84f47965$export$2ff2bbe382249af7","setPosition","b03","b04","b05","b06","b07","b08","b09","det","$a080563c84f47965$export$6897c284b6f9f4dc","compose","pos","xy","xz","yz","$a080563c84f47965$export$ddf9c55c9f2be172","getRotation","getTranslation","getScaling","getMaxScaleOnAxis","max","$a080563c84f47965$export$6276f53cd18ff805","lookAt","eye","target","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","$a080563c84f47965$export$aa67782f4dc9e52c","determinant","$a080563c84f47965$export$a04698f914c55ed9","$fb04c93d64342221$var$tmpMat4","$fb04c93d64342221$export$d93cc409a0768c5f","reorder","fromRotationMatrix","asin","min","atan2","$00a537d3876a9848$export$48889b85f55f068c","$96ae963d78f21e2d$export$563a914cafbdc389","parent","children","visible","matrix","worldMatrix","matrixAutoUpdate","position","quaternion","rotation","setParent","notifyParent","removeChild","addChild","child","notifyChild","indexOf","push","splice","updateMatrixWorld","force","updateMatrix","worldMatrixNeedsUpdate","l","traverse","callback","decompose","invert","$8b492775318acef6$var$tempMat4","$8b492775318acef6$var$tempVec3a","$8b492775318acef6$var$tempVec3b","$8b492775318acef6$export$79f141de891a5fed","gl","zoom","Object","assign","projectionMatrix","viewMatrix","projectionViewMatrix","worldPosition","type","orthographic","perspective","project","unproject","updateFrustum","frustum","constant","invLen","frustumIntersectsMesh","node","geometry","attributes","bounds","radius","Infinity","computeBoundingSphere","center","frustumIntersectsSphere","normal","plane","$5519164a0b6c5963$var$tempVec3","$5519164a0b6c5963$var$ID","$5519164a0b6c5963$var$ATTR_ID","$5519164a0b6c5963$var$isBoundsWarned","$5519164a0b6c5963$export$2db6c17465f94a2","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","key","addAttribute","attr","size","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","usage","STATIC_DRAW","buffer","updateAttribute","isInstanced","warn","index","isNewBuffer","createBuffer","boundBuffer","bindBuffer","bufferData","bufferSubData","setIndex","value","setDrawRange","setInstancedCount","createVAO","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","name","numLoc","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","draw","mode","TRIANGLES","indexBytesPerElement","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","getPosition","computeBoundingBox","array","maxRadiusSq","remove","deleteVertexArray","deleteBuffer","$848c0532ea20aa76$var$emptyPixel","Uint8Array","$848c0532ea20aa76$var$isPowerOf2","$848c0532ea20aa76$var$ID","$848c0532ea20aa76$export$5431306cf43de24a","image","TEXTURE_2D","UNSIGNED_BYTE","format","RGBA","internalFormat","wrapS","CLAMP_TO_EDGE","wrapT","generateMipmaps","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","magFilter","premultiplyAlpha","unpackAlignment","flipY","anisotropy","level","width","height","parameters","maxAnisotropy","texture","createTexture","store","REPEAT","bind","textureUnits","activeTextureUnit","bindTexture","update","textureUnit","activeTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","getExtension","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage2D","isWebgl2","generateMipmap","onUpdate","$ac851d94fa388baa$export$2060d2db72cce88f","$a19a2ed4daf7cb1d$export$83f4edd572c84121","$ac851d94fa388baa$export$adaa4cf7ef1b65be","$ac851d94fa388baa$export$d73ee8ef04f5226a","$ac851d94fa388baa$export$bb628a54ab399bc9","$ac851d94fa388baa$export$dcdf75081b88279d","fromMatrix4","$ac851d94fa388baa$export$2ff2bbe382249af7","fromBasis","vec3a","vec3b","vec3c","$ac851d94fa388baa$export$6897c284b6f9f4dc","getNormalMatrix","$ac851d94fa388baa$export$966b25ab6dc1b1f9","$2b84c153b002876b$var$ID","$2b84c153b002876b$export$e176487c05830cc5","frustumCulled","renderOrder","modelViewMatrix","normalMatrix","beforeRenderCallbacks","afterRenderCallbacks","onBeforeRender","onAfterRender","camera","uniforms","modelMatrix","cameraPosition","mesh","flipFaces","cullFace","use","$9a18914021d787a1$var$tmpVec3A","$9a18914021d787a1$var$tmpVec3B","$9a18914021d787a1$var$tmpVec3C","$9a18914021d787a1$var$tmpVec3D","$9a18914021d787a1$var$tmpQuatA","$9a18914021d787a1$var$tmpQuatB","$9a18914021d787a1$var$tmpQuatC","$9a18914021d787a1$var$tmpQuatD","$9a18914021d787a1$export$1be3b913f1890f40","weight","elapsed","loop","startTime","reduce","times","endTime","duration","totalWeight","isSet","transform","interpolation","values","val","prevIndex","findIndex","nextIndex","alpha","prevVal","prevTan","nextTan","nextVal","cubicSplineInterpolate","t2","t3","s2","s3","s0","s1","$8e1d3e4f7b8e1109$var$tempMat4","$8e1d3e4f7b8e1109$var$identity","$8e1d3e4f7b8e1109$export$163a251c2b28e649","skeleton","createBoneTexture","joints","pow","ceil","log","LN2","boneMatrices","boneTextureSize","boneTexture","RGBA32F","NEAREST","updateUniforms","bone","bindInverse","_worldMatrix","$6529f02fe36996cc$var$ID","$6529f02fe36996cc$var$arrayCacheF32","$6529f02fe36996cc$export$b6c59b989905b650","vertex","fragment","transparent","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","$6529f02fe36996cc$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","currentProgram","useProgram","activeUniform","$6529f02fe36996cc$var$warn","undefined","$6529f02fe36996cc$var$setUniform","CW","deleteProgram","arrayLen","valueLen","$6529f02fe36996cc$var$flatten","setValue","get","slice","$6529f02fe36996cc$var$arraysEqual","$6529f02fe36996cc$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$6529f02fe36996cc$var$warnCount","message","$4bb13c4086f4e1d3$export$2135f87dba422f95","$5d40e10db8667e7f$export$b973696b5f65b53b","$7c2f53a15e509811$export$f3c979c331175ad7","args","isInstancedMesh","addFrustumCull","instanceTransforms","instanceLightmapScaleOffset","totalInstanceCount","frustumCullFunction","instanceRenderList","instanceMatrix","matrixData","lightmapScaleOffset","lightmapData","removeFrustumCull","offBeforeRender","$1b9f4b50da7536c1$var$TYPE_ARRAY","Int16Array","Uint32Array","$1b9f4b50da7536c1$var$TYPE_SIZE","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","$1b9f4b50da7536c1$var$ATTRIBUTES","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","$1b9f4b50da7536c1$var$TRANSFORMS","translation","$1b9f4b50da7536c1$export$aa93f11e7884f0f4","static","manager","basisManager","dir","desc","parseDesc","parse","asset","version","extensionsRequired","includes","buffers","loadBuffers","bufferViews","parseBufferViews","images","parseImages","textures","parseTextures","materials","parseMaterials","skins","parseSkins","meshes","parseMeshes","nodes","parseNodes","populateSkins","animations","parseAnimations","scenes","parseScenes","scene","lights","parseLights","json","fetch","then","res","arrayBuffer","glb","unpackGLB","header","Error","jsonChunkHeader","jsonByteLength","jsonText","TextDecoder","decode","JSON","binaryChunkHeader","binaryByteOffset","binaryByteLength","binary","uri","test","replace","Promise","all","map","resolveURI","primitives","indices","accessors","bufferView","isAttribute","componentType","mimeType","bufferIndex","byteOffset","byteStride","extensions","extras","async","bufferViewIndex","parseTexture","Image","blob","Blob","URL","createObjectURL","ready","onload","textureInfo","sampler","samplerIndex","source","sourceIndex","KHR_texture_basisu","options","samplers","prop","isBasis","pbrMetallicRoughness","normalTexture","occlusionTexture","emissiveTexture","emissiveFactor","alphaMode","alphaCutoff","doubleSided","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","inverseBindMatrices","parseAccessor","weights","meshIndex","numInstances","skinIndices","isLightmap","skin","lightmap_scale_offset","skinIndex","parsePrimitives","instanceCount","material","materialIndex","targets","gltfMaterial","sparse","bufferByteOffset","TypeArray","componentStride","BYTES_PER_ELEMENT","filteredData","typedData","end","lightmapTexture","isFirstInstance","isInstancedMatrix","childIndex","primitive","joint","channels","animationIndex","input","inputIndex","output","outputIndex","nodeIndex","path","animation","nodesIndices","directional","point","spot","lightsDescArray","KHR_lights_punctual","lightIndex","light","lightDesc","color","intensity","direction","range","decay","$c195805182e9cf86$export$e16d8520af44a096","$c195805182e9cf86$export$4e2d2ead65e5f7e3","$c195805182e9cf86$export$dcdf75081b88279d","$c195805182e9cf86$export$f24224f1c91d8156","$c195805182e9cf86$export$bb646b20bb93d339","$e449cbe34df70bb7$export$ac4bca90992eed1","$c195805182e9cf86$export$adaa4cf7ef1b65be","$c195805182e9cf86$export$ab44e1323ffc8376","$c195805182e9cf86$export$5ffbd13800309d59","$c195805182e9cf86$export$3a89f8d6f6bf6c9f","$2d59994004f9a472$var$STATE","NONE","ROTATE","DOLLY","PAN","DOLLY_PAN","$2d59994004f9a472$var$tempVec3","$2d59994004f9a472$var$tempVec2a","$2d59994004f9a472$var$tempVec2b","$2d59994004f9a472$export$439358b35042ae9f","object","element","document","enabled","ease","inertia","enableRotate","rotateSpeed","autoRotate","autoRotateSpeed","enableZoom","zoomSpeed","zoomStyle","enablePan","panSpeed","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","minDistance","maxDistance","sphericalDelta","phi","theta","sphericalTarget","spherical","panDelta","handleAutoRotate","sinPhiRadius","forcePosition","rotateStart","panStart","dollyStart","getZoomScale","mouseButtons","ORBIT","ZOOM","pan","deltaX","deltaY","el","body","targetDistance","clientHeight","panUp","dolly","dollyScale","handleMoveRotate","handleMovePan","onMouseDown","e","button","clientX","clientY","window","addEventListener","onMouseMove","onMouseUp","handleMouseMoveDolly","removeEventListener","onMouseWheel","stopPropagation","preventDefault","onTouchStart","touches","pageX","pageY","dx","dy","handleTouchStartDollyPan","onTouchMove","handleTouchMoveDollyPan","onTouchEnd","onContextMenu","passive","$fd88e942211f2bcd$var$tempVec2a","$fd88e942211f2bcd$var$tempVec2b","$fd88e942211f2bcd$var$tempVec2c","$fd88e942211f2bcd$var$tempVec3a","$fd88e942211f2bcd$var$tempVec3b","$fd88e942211f2bcd$var$tempVec3c","$fd88e942211f2bcd$var$tempVec3d","$fd88e942211f2bcd$var$tempVec3e","$fd88e942211f2bcd$var$tempVec3f","$fd88e942211f2bcd$var$tempVec3g","$fd88e942211f2bcd$var$tempVec3h","$fd88e942211f2bcd$var$tempVec3i","$fd88e942211f2bcd$var$tempVec3j","$fd88e942211f2bcd$var$tempVec3k","$fd88e942211f2bcd$var$tempMat4","$fd88e942211f2bcd$export$ff2d1de6a335cd2e","origin","castMouse","mouse","intersectBounds","isArray","invWorldMat4","hits","localMaxDistance","localDistance","raycast","intersectSphere","intersectBox","hit","localPoint","sort","intersectMeshes","includeUV","includeNormal","closestFaceNormal","faceNormal","barycoord","uvA","uvB","uvC","closestA","closestB","closestC","ai","bi","ci","intersectTriangle","localFaceNormal","uv","localNormal","getBarycoord","intersectPlane","xminp","delta","sphere","ray","tca","d2","radius2","thc","t0","t1","box","tmin","tmax","tYmin","tYmax","tZmin","tZmax","invdirx","invdiry","invdirz","backfaceCulling","edge1","edge2","diff","sign","DdN","DdQxE2","DdE1xQ","QdN","v0","v1","v2","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","$5405bc1de6164e17$var$tempVec3","$5405bc1de6164e17$var$ID","$5405bc1de6164e17$export$88530751e3977073","createElement","dpr","depth","stencil","antialias","preserveDrawingBuffer","powerPreference","autoClear","webgl","getContext","setSize","ZERO","FUNC_ADD","depthMask","framebuffer","viewport","drawBuffers","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_MAX_ANISOTROPY_EXT","style","setViewport","setScissor","scissor","blendFuncSeparate","blendEquationSeparate","TEXTURE0","bindFramebuffer","FRAMEBUFFER","extension","webgl2Func","extFunc","sortOpaque","zDepth","sortTransparent","sortUI","getRenderList","frustumCull","renderList","opaque","ui","concat","render","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","$d977e811b5b608bf$export$7ff5ac152ef991b0","widthSegments","heightSegments","wSegs","hSegs","num","numIndices","buildPlane","uDir","vDir","ii","io","segW","segH","iy","ix","d","$e7ac6000cc08ea2e$export$e71c4d32a2263218","depthSegments","dSegs","$1f0666b324e44d22$export$58265b4e650003a9","imgArray","$1fc3d9aeada2afee$export$fe2589e86ee56365","types","register","func","send","$d88b1b225c388b44$export$861aefa359e7ffce","buttonLabel","listId","li","append","getElementById","$059ab890434a1ba2$var$STATE","$059ab890434a1ba2$var$PLANE","$059ab890434a1ba2$export$5304145354a3bee9","msgBus","assets","heldObject","objectList","setupAssets","registerCallbacks","assetId","event","pointerDown","intersection","objIndex","find","obj","pointerMove","unregisterCallbacks","canvasElem","querySelector","view","resize","parentNode","clientWidth","controls","gltf","load","root","asset_id","loadAssets","requestAnimationFrame","$dad545c909cfec2d$var$init"],"version":3,"file":"index.c0dd9181.js.map"}